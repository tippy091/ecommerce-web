import React from 'react';
import { type RaRecord, type UseGetListOptions, type UseReferenceArrayFieldControllerParams, type UseReferenceManyFieldControllerParams } from 'ra-core';
import { ButtonProps } from './Button';
/**
 * Select all items in the current List context.
 *
 * Used in Datagrid's bulk action toolbar.
 *
 * @typedef {Object} Props the props you can use
 * @prop {string} label Button label. Defaults to 'ra.action.select_all_button', translated.
 * @prop {string} limit Maximum number of items to select. Defaults to 250.
 * @prop {function} queryOptions Object of options passed to react-query.
 *
 * @param {Props} props
 *
 * @example
 *
 * import { List, Datagrid, BulkActionsToolbar, SelectAllButton, BulkDeleteButton } from 'react-admin';
 *
 * const PostSelectAllButton = () => (
 *     <SelectAllButton
 *         label="Select all records"
 *         queryOptions={{ meta: { foo: 'bar' } }}
 *     />
 * );
 *
 * export const PostList = () => (
 *     <List>
 *         <Datagrid
 *             bulkActionsToolbar={
 *                 <BulkActionsToolbar selectAllButton={PostSelectAllButton}>
 *                     <BulkDeleteButton />
 *                 </BulkActionsToolbar>
 *             }
 *         >
 *             ...
 *         </Datagrid>
 *     </List>
 * );
 */
export declare const SelectAllButton: (props: SelectAllButtonProps) => React.JSX.Element | null;
export type SelectAllButtonProps<RecordType extends RaRecord = any> = ButtonProps & {
    limit?: number;
    queryOptions?: UseGetListOptions<RecordType> | UseReferenceArrayFieldControllerParams<RecordType>['queryOptions'] | UseReferenceManyFieldControllerParams<RecordType>['queryOptions'];
};
//# sourceMappingURL=SelectAllButton.d.ts.map